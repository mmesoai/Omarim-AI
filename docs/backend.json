
{
  "entities": {
    "Lead": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Lead",
      "type": "object",
      "description": "Represents a lead scraped from various sources.",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address of the lead.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "First name of the lead."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the lead."
        },
        "company": {
          "type": "string",
          "description": "Company name of the lead."
        },
        "domain": {
          "type": "string",
          "description": "Domain name of the lead's company."
        },
        "status": {
          "type": "string",
          "description": "The current status of the lead (e.g., New, Contacted, Interested)."
        }
      },
      "required": [
        "email",
        "firstName",
        "lastName",
        "company",
        "domain",
        "status"
      ]
    },
    "NotionPage": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "NotionPage",
      "type": "object",
      "description": "Represents a Notion page where lead data is stored.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the NotionPage entity."
        },
        "pageUrl": {
          "type": "string",
          "description": "URL of the Notion page."
        },
        "databaseId": {
          "type": "string",
          "description": "ID of the Notion database."
        }
      },
      "required": [
        "id",
        "pageUrl",
        "databaseId"
      ]
    },
    "OutreachSequence": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OutreachSequence",
      "type": "object",
      "description": "Represents an email outreach sequence.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the OutreachSequence entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the outreach sequence."
        },
        "description": {
          "type": "string",
          "description": "Description of the outreach sequence."
        },
        "leadIds": {
          "type": "array",
          "description": "References to Leads. (Relationship: OutreachSequence N:N Lead)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "leadIds"
      ]
    },
    "Email": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Email",
      "type": "object",
      "description": "Represents an email sent as part of an outreach sequence.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Email entity."
        },
        "outreachSequenceId": {
          "type": "string",
          "description": "Reference to OutreachSequence. (Relationship: OutreachSequence 1:N Email)"
        },
        "leadId": {
          "type": "string",
          "description": "Reference to Lead. (Relationship: Lead 1:N Email)"
        },
        "subject": {
          "type": "string",
          "description": "Subject line of the email."
        },
        "body": {
          "type": "string",
          "description": "Body of the email."
        },
        "sentAt": {
          "type": "string",
          "description": "Timestamp when the email was sent.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "outreachSequenceId",
        "leadId",
        "subject",
        "body",
        "sentAt"
      ]
    },
    "InboundReply": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "InboundReply",
      "type": "object",
      "description": "Represents an inbound email reply.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the InboundReply entity."
        },
        "emailId": {
          "type": "string",
          "description": "Reference to Email. (Relationship: Email 1:N InboundReply)"
        },
        "receivedAt": {
          "type": "string",
          "description": "Timestamp when the reply was received.",
          "format": "date-time"
        },
        "body": {
          "type": "string",
          "description": "Body of the reply email."
        },
        "sentiment": {
          "type": "string",
          "description": "Sentiment of the reply (e.g., positive, negative, neutral)."
        },
        "tags": {
          "type": "array",
          "description": "Tags associated with the reply.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "emailId",
        "receivedAt",
        "body",
        "sentiment",
        "tags"
      ]
    },
    "DomainCheck": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DomainCheck",
      "type": "object",
      "description": "Represents the result of a domain check.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the DomainCheck entity."
        },
        "domain": {
          "type": "string",
          "description": "The domain being checked."
        },
        "status": {
          "type": "string",
          "description": "Status of the domain (e.g., available, registered)."
        },
        "options": {
          "type": "array",
          "description": "Alternative domain options.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "domain",
        "status",
        "options"
      ]
    },
    "Payment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Payment",
      "type": "object",
      "description": "Represents a payment transaction.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Payment entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Payment)"
        },
        "amount": {
          "type": "number",
          "description": "Amount of the payment."
        },
        "currency": {
          "type": "string",
          "description": "Currency of the payment."
        },
        "paymentMethod": {
          "type": "string",
          "description": "Payment method used (e.g., Stripe, PayPal)."
        },
        "transactionId": {
          "type": "string",
          "description": "Transaction ID from the payment gateway."
        },
        "status": {
          "type": "string",
          "description": "Status of the payment (e.g., pending, completed, failed)."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp when the payment was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "amount",
        "currency",
        "paymentMethod",
        "transactionId",
        "status",
        "createdAt"
      ]
    },
    "Provisioning": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Provisioning",
      "type": "object",
      "description": "Represents the provisioning of a service after payment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Provisioning entity."
        },
        "paymentId": {
          "type": "string",
          "description": "Reference to Payment. (Relationship: Payment 1:N Provisioning)"
        },
        "serviceType": {
          "type": "string",
          "description": "Type of service being provisioned."
        },
        "status": {
          "type": "string",
          "description": "Status of the provisioning (e.g., pending, completed, failed)."
        },
        "details": {
          "type": "string",
          "description": "Details about the provisioning process."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp when the provisioning was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "paymentId",
        "serviceType",
        "status",
        "details",
        "createdAt"
      ]
    },
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a product listed on a store.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "description": {
          "type": "string",
          "description": "Description of the product."
        },
        "price": {
          "type": "number",
          "description": "Price of the product."
        },
        "quantity": {
          "type": "number",
          "description": "Available quantity of the product."
        },
        "imageId": {
          "type": "string",
          "description": "ID of the product image from the placeholder library."
        },
        "source": {
            "type": "string",
            "description": "The e-commerce platform this product is from (e.g., Shopify, WooCommerce)."
        }
      },
      "required": [
        "name",
        "description",
        "price",
        "quantity",
        "imageId",
        "source"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the application.",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user."
        }
      },
      "required": [
        "email",
        "firstName",
        "lastName"
      ]
    },
    "Store": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Store",
      "type": "object",
      "description": "Represents a store integrated with the application.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the store."
        },
        "type": {
          "type": "string",
          "description": "Type of store (e.g., Shopify, WooCommerce, Amazon, eBay)."
        },
        "apiUrl": {
          "type": "string",
          "description": "API URL of the store."
        },
        "apiKey": {
          "type": "string",
          "description": "API Key for the store."
        }
      },
      "required": [
        "name",
        "type",
        "apiUrl",
        "apiKey"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": {
        "$ref": "#/entities/User"
      },
      "description": "Collection of user profiles."
    },
    "/users/{userId}/leads/{leadId}": {
      "schema": {
        "$ref": "#/entities/Lead"
      },
      "description": "Collection of leads owned by a user."
    },
    "/users/{userId}/products/{productId}": {
      "schema": {
        "$ref": "#/entities/Product"
      },
      "description": "Collection of products owned by a user."
    },
    "/users/{userId}/outreachSequences/{outreachSequenceId}": {
      "schema": {
        "$ref": "#/entities/OutreachSequence"
      },
      "description": "Collection of outreach sequences created by a user."
    },
    "/users/{userId}/outreachSequences/{outreachSequenceId}/emails/{emailId}": {
      "schema": {
        "$ref": "#/entities/Email"
      },
      "description": "Collection of emails associated with an outreach sequence."
    },
    "/users/{userId}/stores/{storeId}": {
      "schema": {
        "$ref": "#/entities/Store"
      },
      "description": "Collection of stores integrated by a user."
    }
  }
}

    